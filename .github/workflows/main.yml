name: Build and publish

on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build
        working-directory: ./sw-embed
        run: |
          npm install
          npm run build

      # provides tag name "from commit that triggered the action" as standalone value ${{ steps.tagName.outputs.tag }} or env var that can be used in shell code like $GIT_TAG_NAME
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
        with:
          tagRegex: ""
          tagRegexGroup: 1

      - name: Copy outputs into version folders
        run: |
          commit=`git rev-parse HEAD`
          buildfoldername="build-${commit}"
          mkdir "sw-embed/dist/$buildfoldername/"
          cp sw-embed/dist/sw-embed.* "sw-embed/dist/$buildfoldername/"
          semver=$GIT_TAG_NAME
          semverlength=${#semver}
          if [ "$semverlength" -gt "0" ]; then
            echo "Tag found, saving semver build"
            mkdir "sw-embed/dist/$semver/"
            cp sw-embed/dist/sw-embed.* "sw-embed/dist/$semver/"
          else
            printf "No tag found, not saving semver build. \nSemver value: $semver \nLength: $semverlength"
          fi

      - uses: jakejarvis/s3-sync-action@master
        name: publish
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SOURCE_DIR: 'sw-embed/dist'
          DEST_DIR: 'lib/sw-embed'
